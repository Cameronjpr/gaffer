// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package db

import (
	"context"
)

type Querier interface {
	CompleteMatch(ctx context.Context, arg CompleteMatchParams) error
	CreateClub(ctx context.Context, arg CreateClubParams) (Club, error)
	CreateFixture(ctx context.Context, arg CreateFixtureParams) (Fixture, error)
	CreateMatch(ctx context.Context, arg CreateMatchParams) (Match, error)
	CreateMatchEvent(ctx context.Context, arg CreateMatchEventParams) (MatchEvent, error)
	CreatePlayer(ctx context.Context, arg CreatePlayerParams) (Player, error)
	DeleteClub(ctx context.Context, id int64) error
	DeleteFixture(ctx context.Context, id int64) error
	DeleteMatch(ctx context.Context, id int64) error
	DeleteMatchEvents(ctx context.Context, matchID int64) error
	DeletePlayer(ctx context.Context, id int64) error
	GetAllClubs(ctx context.Context) ([]Club, error)
	GetAllFixtures(ctx context.Context) ([]Fixture, error)
	GetClubByID(ctx context.Context, id int64) (Club, error)
	GetClubByName(ctx context.Context, name string) (Club, error)
	GetCompletedMatches(ctx context.Context) ([]Match, error)
	GetEventsByMatchID(ctx context.Context, matchID int64) ([]MatchEvent, error)
	GetFixtureByID(ctx context.Context, id int64) (Fixture, error)
	GetFixturesByClubID(ctx context.Context, arg GetFixturesByClubIDParams) ([]Fixture, error)
	GetMatchByFixtureID(ctx context.Context, fixtureID int64) (Match, error)
	GetMatchByID(ctx context.Context, id int64) (Match, error)
	GetPlayerByID(ctx context.Context, id int64) (Player, error)
	GetPlayersByClubID(ctx context.Context, clubID int64) ([]Player, error)
	GetUnplayedByClubID(ctx context.Context, homeTeamID int64) ([]Fixture, error)
	UpdateMatch(ctx context.Context, arg UpdateMatchParams) error
}

var _ Querier = (*Queries)(nil)
